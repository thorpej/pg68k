Atmel ATF1508 Fitter Version 1918 ,running Sat Jul 05 09:45:50 2025




fit1508
-i isactl.edif
-ifmt edif
-o isactl.jed
-lib C:\ATMEL_PLS_Tools\Prochip\pldfit\aprim.lib
-tech ATF1508AS
-device TQFP100
-tpd 7

****** Initial fitting strategy and property ******
 Netlist_in_file = isactl.edif
 Netlist_out_file = isactl.tt3
 Jedec_file = isactl.jed
 Log_file = isactl.fit
 Device_name = TQFP100
 Tech_name = ATF1508AS 
 Package_type = TQFP
 Preassignment = try 
 Security_mode = OFF
 Pin-Keeper = OFF
 supporter = ABEL
 optimize = ON
 Xor_synthesis = OFF
 Foldback_logic = OFF
 Cascade_logic = OFF
 Output_fast = ON
 SSTL_input = off
 *******************************
 Power down pin 1 = OFF
 Power down pin 2 = OFF
 power_reset = OFF
 JTAG = ON
 TDI pullup = OFF
 TMS pullup = OFF
 MC_power = OFF
 Open_collector = OFF
 ITD0 = ON
 ITD1 = ON
 ITD2 = ON
 Fast_inlatch = off
 TPD = 7
 Latch_synthesis = off 
 Push_gate = on 
 Verilog_sim = off 
 VHDL_sim = off 
 Out_Edif = off 
 Logic Doubling = off 
 ****** End of fitting strategy and property ******
---------------------------------------------------------
 Fitter_Pass 1, Preassign = KEEP, LOGIC_DOUBLING : OFF 
 ... 
 ## Warning : Placement fail 
---------------------------------------------------------
 Fitter_Pass 2, Preassign = KEEP, CASCADE_LOGIC : (TRY) 
 ... 

Performing global Output Enable pin assignments ...

Performing global pin assignments ...
--------------------------------------



Final global control pins assignment (if applicable)...
-------------------------------------------------------
CPU_CLK assigned to pin  90
nRST assigned to pin  89



Performing input pin pre-assignments ...
------------------------------------
CPU_CLK assigned to pin  90
nAS assigned to pin  87
nRST assigned to pin  89
nDS assigned to pin  88

Attempt to place floating signals ...
------------------------------------
DSACK_1 is placed at pin 2 (MC 1)
id00446 is placed at feedback node 602 (MC 2)
DSACK_0 is placed at pin 1 (MC 3)
id00450 is placed at feedback node 604 (MC 4)
BERR is placed at pin 100 (MC 5)
id00447 is placed at feedback node 607 (MC 7)
TMRINT is placed at pin 98 (MC 8)
id00424 is placed at feedback node 609 (MC 9)
id00448 is placed at feedback node 610 (MC 10)
id00445 is placed at feedback node 611 (MC 11)
id00116Q is placed at foldback expander node 311 (MC 11)
id00449 is placed at feedback node 612 (MC 12)
id00159Q is placed at feedback node 616 (MC 16)
ADDR_5 is placed at pin 14 (MC 17)
ADDR_4 is placed at pin 13 (MC 19)
ADDR_3 is placed at pin 12 (MC 21)
ADDR_2 is placed at pin 10 (MC 22)
id00420 is placed at feedback node 623 (MC 23)
ADDR_1 is placed at pin 9 (MC 24)
id00465 is placed at feedback node 624 (MC 24)
ADDR_0 is placed at pin 8 (MC 25)
id00462 is placed at feedback node 625 (MC 25)
id00148QN is placed at foldback expander node 325 (MC 25)
id00459 is placed at feedback node 626 (MC 26)
id00140QN is placed at foldback expander node 326 (MC 26)
SIZ_1 is placed at pin 7 (MC 27)
id00463 is placed at feedback node 627 (MC 27)
FB_2_id00116Q is placed at foldback expander node 327 (MC 27)
XXL_824 is placed at feedback node 628 (MC 28)
SIZ_0 is placed at pin 6 (MC 29)
id00460 is placed at feedback node 629 (MC 29)
RnW is placed at pin 5 (MC 30)
XXL_825 is placed at feedback node 630 (MC 30)
id00464 is placed at feedback node 631 (MC 31)
TDI is placed at pin 4 (MC 32)
XXL_826 is placed at feedback node 632 (MC 32)
DATA_4 is placed at pin 25 (MC 33)
id00473 is placed at feedback node 634 (MC 34)
DATA_3 is placed at pin 24 (MC 35)
id00436 is placed at feedback node 636 (MC 36)
DATA_2 is placed at pin 23 (MC 37)
id00066Q is placed at foldback expander node 337 (MC 37)
DATA_1 is placed at pin 22 (MC 38)
id00067Q is placed at foldback expander node 338 (MC 38)
id00478 is placed at feedback node 639 (MC 39)
id00007Q is placed at foldback expander node 339 (MC 39)
DATA_0 is placed at pin 21 (MC 40)
id00013Q is placed at foldback expander node 340 (MC 40)
ADDR_9 is placed at pin 20 (MC 41)
id00434 is placed at feedback node 641 (MC 41)
XXL_814 is placed at feedback node 642 (MC 42)
ADDR_8 is placed at pin 19 (MC 43)
id00427 is placed at feedback node 643 (MC 43)
id00472 is placed at feedback node 644 (MC 44)
ADDR_7 is placed at pin 17 (MC 45)
id00471 is placed at feedback node 645 (MC 45)
ADDR_6 is placed at pin 16 (MC 46)
id00438 is placed at feedback node 646 (MC 46)
id00064Q is placed at feedback node 647 (MC 47)
TMS is placed at pin 15 (MC 48)
id00437 is placed at feedback node 648 (MC 48)
id00431 is placed at feedback node 649 (MC 49)
id00475 is placed at feedback node 650 (MC 50)
id00477 is placed at feedback node 651 (MC 51)
FB_4_id00066Q is placed at foldback expander node 351 (MC 51)
id00440 is placed at feedback node 652 (MC 52)
XXL_818 is placed at feedback node 653 (MC 53)
id00272QN is placed at feedback node 654 (MC 54)
id00474 is placed at feedback node 655 (MC 55)
id00476 is placed at feedback node 656 (MC 56)
XXL_819 is placed at feedback node 657 (MC 57)
id00441 is placed at feedback node 658 (MC 58)
id00433 is placed at feedback node 660 (MC 60)
DATA_7 is placed at pin 29 (MC 61)
FB_4_id00067Q is placed at foldback expander node 361 (MC 61)
DATA_6 is placed at pin 28 (MC 62)
FB_4_id00007Q is placed at foldback expander node 362 (MC 62)
id00439 is placed at feedback node 663 (MC 63)
DATA_5 is placed at pin 27 (MC 64)
FB_4_id00013Q is placed at foldback expander node 364 (MC 64)
id00041QN is placed at feedback node 666 (MC 66)
FB_5_id00013Q is placed at foldback expander node 366 (MC 66)
id00428 is placed at feedback node 667 (MC 67)
id00479 is placed at feedback node 668 (MC 68)
id00425 is placed at feedback node 669 (MC 69)
id00429 is placed at feedback node 670 (MC 70)
id00470 is placed at feedback node 671 (MC 71)
id00423 is placed at feedback node 672 (MC 72)
id00106QN is placed at foldback expander node 372 (MC 72)
id00050Q is placed at feedback node 673 (MC 73)
id00014Q is placed at foldback expander node 373 (MC 73)
id00469 is placed at feedback node 674 (MC 74)
id00421 is placed at feedback node 675 (MC 75)
id00009Q is placed at foldback expander node 375 (MC 75)
id00024QN is placed at feedback node 676 (MC 76)
id00467 is placed at feedback node 677 (MC 77)
FB_5_id00066Q is placed at foldback expander node 377 (MC 77)
id00468 is placed at feedback node 678 (MC 78)
FB_5_id00067Q is placed at foldback expander node 378 (MC 78)
id00435 is placed at feedback node 679 (MC 79)
id00430 is placed at feedback node 680 (MC 80)
id00432 is placed at feedback node 681 (MC 81)
XXL_815 is placed at feedback node 682 (MC 82)
XXL_822 is placed at feedback node 683 (MC 83)
id00452 is placed at feedback node 684 (MC 84)
id00453 is placed at feedback node 685 (MC 85)
id00457 is placed at feedback node 686 (MC 86)
XXL_820 is placed at feedback node 687 (MC 87)
id00461 is placed at feedback node 688 (MC 88)
id00454 is placed at feedback node 689 (MC 89)
FB_6_id00140QN is placed at foldback expander node 389 (MC 89)
XXL_821 is placed at feedback node 690 (MC 90)
id00458 is placed at feedback node 691 (MC 91)
id00132QN is placed at foldback expander node 391 (MC 91)
id00456 is placed at feedback node 692 (MC 92)
id00451 is placed at feedback node 693 (MC 93)
id00124QN is placed at foldback expander node 393 (MC 93)
id00455 is placed at feedback node 694 (MC 94)
FB_6_id00116Q is placed at foldback expander node 394 (MC 94)
id00422 is placed at feedback node 695 (MC 95)
TCK is placed at pin 62 (MC 96)
XXL_823 is placed at feedback node 696 (MC 96)
XXL_816 is placed at feedback node 698 (MC 98)
id00061QN is placed at feedback node 700 (MC 100)
id00053Q is placed at feedback node 703 (MC 103)
id00003 is placed at feedback node 706 (MC 106)
FB_7_id00014Q is placed at foldback expander node 406 (MC 106)
FB_7_id00009Q is placed at foldback expander node 407 (MC 107)
XXL_817 is placed at feedback node 708 (MC 108)
nDUARTSEL is placed at pin 71 (MC 109)
FB_7_id00007Q is placed at foldback expander node 409 (MC 109)
nATASEL is placed at pin 72 (MC 110)
TDO is placed at pin 73 (MC 112)
id00426 is placed at feedback node 712 (MC 112)
nATAAUXSEL is placed at pin 75 (MC 113)
nATABEN is placed at pin 76 (MC 115)
nISA_IORD is placed at pin 77 (MC 117)
nISA_IOWR is placed at pin 78 (MC 118)
ISA_AEN is placed at pin 79 (MC 120)
id00443 is placed at feedback node 722 (MC 122)
id00442 is placed at feedback node 724 (MC 124)
ISA_RDY is placed at pin 84 (MC 126)
id00480 is placed at feedback node 726 (MC 126)
id00482 is placed at feedback node 727 (MC 127)
nISASEL is placed at pin 85 (MC 128)
id00481 is placed at feedback node 728 (MC 128)
XXL_813 is placed at foldback expander node 428 (MC 128)

                                                                                       n  n     
                                                                                       I  I     
                                                   C              n  I              I  S  S  n  
                           T                       P              I  S              S  A  A  A  
                           M                       U              S  A              A  _  _  T  
                     B     R                       _  n           A  _              _  I  I  A  
                     E     I        G           V  C  R  n  n  G  S  R     V        A  O  O  B  
                     R     N        N           C  L  S  D  A  N  E  D     C        E  W  R  E  
                     R     T        D           C  K  T  S  S  D  L  Y     C        N  R  D  N  
                 +------------------------------------------------------------------------------+
                 | 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76  |
          DSACK_0| 1                                                                         75 |nATAAUXSEL
          DSACK_1| 2                                                                         74 |GND
              VCC| 3                                                                         73 |TDO
              TDI| 4                                                                         72 |nATASEL
              RnW| 5                                                                         71 |nDUARTSEL
            SIZ_0| 6                                                                         70 |   
            SIZ_1| 7                                                                         69 |   
           ADDR_0| 8                                                                         68 |   
           ADDR_1| 9                                                                         67 |   
           ADDR_2| 10                                                                        66 |VCC
              GND| 11                                                                        65 |   
           ADDR_3| 12                                ATF1508                                 64 |   
           ADDR_4| 13                             100-Lead TQFP                              63 |   
           ADDR_5| 14                                                                        62 |TCK
              TMS| 15                                                                        61 |   
           ADDR_6| 16                                                                        60 |   
           ADDR_7| 17                                                                        59 |GND
              VCC| 18                                                                        58 |   
           ADDR_8| 19                                                                        57 |   
           ADDR_9| 20                                                                        56 |   
           DATA_0| 21                                                                        55 |   
           DATA_1| 22                                                                        54 |   
           DATA_2| 23                                                                        53 |   
           DATA_3| 24                                                                        52 |   
           DATA_4| 25                                                                        51 |VCC
                 |  26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  |
                 +------------------------------------------------------------------------------+
                     G  D  D  D              V           G  V           G                       
                     N  A  A  A              C           N  C           N                       
                     D  T  T  T              C           D  C           D                       
                        A  A  A                                                                 
                        _  _  _                                                                 
                        5  6  7                                                                 




VCC = Supply Voltage pin for the device core

GND = GND pin which must be connected to ground

TMS,TDI,TDO,TDI = JTAG pins reserved for JTAG interface

NC = Unused I/O pins which must be unconnected on the board

Universal-Interconnect-Multiplexer assignments
------------------------------------------------
FanIn assignment for block A [34]
{
BERR,
TMRINT,
XXL_815,
id00461,id00465,id00449,id00453,id00454,id00447,id00443,id00478,id00159Q,id00428,id00455,id00460,id00446,id00462,id00452,id00451,id00459,id00445,id00479,id00433,id00457,id00448,id00442,id00477,id00464,id00463,id00061QN,id00456,id00450,id00458,
nDS,
}
Multiplexer assignment for block A
id00461			(MC25	FB)  : MUX 0		Ref (F88fb)
BERR			(MC3	P)   : MUX 1		Ref (A5p)
id00465			(MC10	FB)  : MUX 2		Ref (B24fb)
TMRINT			(MC5	P)   : MUX 3		Ref (A8p)
id00449			(MC8	FB)  : MUX 5		Ref (A12fb)
id00453			(MC23	FB)  : MUX 6		Ref (F85fb)
id00454			(MC26	FB)  : MUX 7		Ref (F89fb)
id00447			(MC4	FB)  : MUX 8		Ref (A7fb)
id00443			(MC32	FB)  : MUX 9		Ref (H122fb)
id00478			(MC16	FB)  : MUX 10		Ref (C39fb)
id00159Q		(MC9	FB)  : MUX 11		Ref (A16fb)
id00428			(MC19	FB)  : MUX 12		Ref (E67fb)
id00455			(MC30	FB)  : MUX 13		Ref (F94fb)
id00460			(MC14	FB)  : MUX 15		Ref (B29fb)
id00446			(MC1	FB)  : MUX 16		Ref (A2fb)
id00462			(MC11	FB)  : MUX 17		Ref (B25fb)
id00452			(MC22	FB)  : MUX 18		Ref (F84fb)
id00451			(MC29	FB)  : MUX 19		Ref (F93fb)
id00459			(MC12	FB)  : MUX 21		Ref (B26fb)
id00445			(MC7	FB)  : MUX 23		Ref (A11fb)
id00479			(MC20	FB)  : MUX 24		Ref (E68fb)
id00433			(MC18	FB)  : MUX 25		Ref (D60fb)
id00457			(MC24	FB)  : MUX 26		Ref (F86fb)
id00448			(MC6	FB)  : MUX 27		Ref (A10fb)
XXL_815			(MC21	FB)  : MUX 28		Ref (F82fb)
id00442			(MC33	FB)  : MUX 29		Ref (H124fb)
id00477			(MC17	FB)  : MUX 30		Ref (D51fb)
id00464			(MC15	FB)  : MUX 31		Ref (B31fb)
id00463			(MC13	FB)  : MUX 33		Ref (B27fb)
id00061QN		(MC31	FB)  : MUX 34		Ref (G100fb)
nDS			(MC34	FB)  : MUX 35		Ref (OE1)
id00456			(MC28	FB)  : MUX 37		Ref (F92fb)
id00450			(MC2	FB)  : MUX 38		Ref (A4fb)
id00458			(MC27	FB)  : MUX 39		Ref (F91fb)

FanIn assignment for block B [34]
{
XXL_825,XXL_826,
id00476,id00159Q,id00450,id00464,id00471,id00453,id00448,id00447,id00451,id00446,id00459,id00465,id00455,id00474,id00463,id00452,id00462,id00449,id00461,id00454,id00050Q,id00479,id00458,id00457,id00473,id00472,id00477,id00456,id00475,id00460,id00470,id00003,
}
Multiplexer assignment for block B
id00476			(MC21	FB)  : MUX 0		Ref (D56fb)
id00159Q		(MC6	FB)  : MUX 1		Ref (A16fb)
id00450			(MC2	FB)  : MUX 2		Ref (A4fb)
id00464			(MC13	FB)  : MUX 3		Ref (B31fb)
id00471			(MC17	FB)  : MUX 5		Ref (C45fb)
id00453			(MC26	FB)  : MUX 6		Ref (F85fb)
id00448			(MC4	FB)  : MUX 7		Ref (A10fb)
id00447			(MC3	FB)  : MUX 8		Ref (A7fb)
id00451			(MC32	FB)  : MUX 9		Ref (F93fb)
id00446			(MC1	FB)  : MUX 10		Ref (A2fb)
id00459			(MC9	FB)  : MUX 11		Ref (B26fb)
id00465			(MC7	FB)  : MUX 12		Ref (B24fb)
id00455			(MC33	FB)  : MUX 13		Ref (F94fb)
id00474			(MC20	FB)  : MUX 14		Ref (D55fb)
id00463			(MC10	FB)  : MUX 15		Ref (B27fb)
id00452			(MC25	FB)  : MUX 16		Ref (F84fb)
id00462			(MC8	FB)  : MUX 17		Ref (B25fb)
id00449			(MC5	FB)  : MUX 19		Ref (A12fb)
id00461			(MC28	FB)  : MUX 20		Ref (F88fb)
id00454			(MC29	FB)  : MUX 21		Ref (F89fb)
id00050Q		(MC24	FB)  : MUX 23		Ref (E73fb)
id00479			(MC22	FB)  : MUX 24		Ref (E68fb)
id00458			(MC30	FB)  : MUX 25		Ref (F91fb)
id00457			(MC27	FB)  : MUX 26		Ref (F86fb)
XXL_825			(MC12	FB)  : MUX 27		Ref (B30fb)
id00473			(MC15	FB)  : MUX 28		Ref (C34fb)
id00472			(MC16	FB)  : MUX 29		Ref (C44fb)
id00477			(MC19	FB)  : MUX 30		Ref (D51fb)
id00456			(MC31	FB)  : MUX 31		Ref (F92fb)
id00475			(MC18	FB)  : MUX 32		Ref (D50fb)
id00460			(MC11	FB)  : MUX 35		Ref (B29fb)
XXL_826			(MC14	FB)  : MUX 37		Ref (B32fb)
id00470			(MC23	FB)  : MUX 38		Ref (E71fb)
id00003			(MC34	FB)  : MUX 39		Ref (G106fb)

FanIn assignment for block C [34]
{
ADDR_9,ADDR_7,ADDR_8,ADDR_6,ADDR_5,ADDR_1,ADDR_4,ADDR_2,ADDR_0,ADDR_3,
DATA_2,DATA_4,DATA_3,DATA_0,
RnW,
SIZ_0,SIZ_1,
TMRINT,
XXL_817,XXL_816,
id00438,id00041QN,id00471,id00472,id00437,id00434,id00436,id00478,id00003,id00473,id00480,
nISASEL,nDS,nAS,
}
Multiplexer assignment for block C
DATA_2			(MC6	P)   : MUX 1		Ref (C37p)
ADDR_9			(MC28	P)   : MUX 2		Ref (C41p)
TMRINT			(MC1	P)   : MUX 3		Ref (A8p)
ADDR_7			(MC30	P)   : MUX 4		Ref (C45p)
DATA_4			(MC2	P)   : MUX 5		Ref (C33p)
id00438			(MC12	FB)  : MUX 7		Ref (C46fb)
id00041QN		(MC14	FB)  : MUX 8		Ref (E66fb)
DATA_3			(MC4	P)   : MUX 9		Ref (C35p)
ADDR_8			(MC29	P)   : MUX 10		Ref (C43p)
DATA_0			(MC8	P)   : MUX 11		Ref (C40p)
ADDR_6			(MC31	P)   : MUX 12		Ref (C46p)
XXL_817			(MC17	FB)  : MUX 13		Ref (G108fb)
ADDR_5			(MC19	P)   : MUX 15		Ref (B17p)
SIZ_0			(MC26	P)   : MUX 16		Ref (B29p)
id00471			(MC11	FB)  : MUX 17		Ref (C45fb)
id00472			(MC10	FB)  : MUX 19		Ref (C44fb)
nISASEL			(MC32	P)   : MUX 20		Ref (H128p)
id00437			(MC13	FB)  : MUX 21		Ref (C48fb)
RnW			(MC27	P)   : MUX 22		Ref (B30p)
ADDR_1			(MC23	P)   : MUX 23		Ref (B24p)
SIZ_1			(MC25	P)   : MUX 24		Ref (B27p)
id00434			(MC9	FB)  : MUX 25		Ref (C41fb)
id00436			(MC5	FB)  : MUX 26		Ref (C36fb)
ADDR_4			(MC20	P)   : MUX 27		Ref (B19p)
ADDR_2			(MC22	P)   : MUX 29		Ref (B22p)
ADDR_0			(MC24	P)   : MUX 30		Ref (B25p)
ADDR_3			(MC21	P)   : MUX 31		Ref (B21p)
id00478			(MC7	FB)  : MUX 32		Ref (C39fb)
id00003			(MC16	FB)  : MUX 33		Ref (G106fb)
nDS			(MC34	FB)  : MUX 35		Ref (OE1)
id00473			(MC3	FB)  : MUX 36		Ref (C34fb)
id00480			(MC18	FB)  : MUX 37		Ref (H126fb)
XXL_816			(MC15	FB)  : MUX 38		Ref (G98fb)
nAS			(MC33	FB)  : MUX 39		Ref (GCLK)

FanIn assignment for block D [34]
{
ADDR_8,ADDR_2,ADDR_4,ADDR_5,ADDR_9,ADDR_1,ADDR_6,ADDR_0,ADDR_3,ADDR_7,
DATA_7,DATA_6,DATA_5,
ISA_RDY,
RnW,
SIZ_1,SIZ_0,
id00480,id00475,id00433,id00477,id00427,id00041QN,id00439,id00440,id00426,id00053Q,id00441,id00003,id00476,id00474,
nISASEL,nDS,nAS,
}
Multiplexer assignment for block D
ADDR_8			(MC28	P)   : MUX 0		Ref (C43p)
id00480			(MC17	FB)  : MUX 1		Ref (H126fb)
SIZ_1			(MC24	P)   : MUX 2		Ref (B27p)
id00475			(MC2	FB)  : MUX 4		Ref (D50fb)
ISA_RDY			(MC31	P)   : MUX 6		Ref (H126p)
ADDR_2			(MC21	P)   : MUX 7		Ref (B22p)
DATA_7			(MC9	P)   : MUX 8		Ref (D61p)
id00433			(MC8	FB)  : MUX 9		Ref (D60fb)
DATA_6			(MC10	P)   : MUX 10		Ref (D62p)
ADDR_4			(MC19	P)   : MUX 11		Ref (B19p)
DATA_5			(MC12	P)   : MUX 12		Ref (D64p)
ADDR_5			(MC18	P)   : MUX 13		Ref (B17p)
id00477			(MC3	FB)  : MUX 14		Ref (D51fb)
ADDR_9			(MC27	P)   : MUX 16		Ref (C41p)
id00427			(MC1	FB)  : MUX 17		Ref (C43fb)
id00041QN		(MC13	FB)  : MUX 18		Ref (E66fb)
id00439			(MC11	FB)  : MUX 19		Ref (D63fb)
nISASEL			(MC32	P)   : MUX 20		Ref (H128p)
RnW			(MC26	P)   : MUX 22		Ref (B30p)
id00440			(MC4	FB)  : MUX 24		Ref (D52fb)
ADDR_1			(MC22	P)   : MUX 25		Ref (B24p)
ADDR_6			(MC30	P)   : MUX 26		Ref (C46p)
id00426			(MC16	FB)  : MUX 27		Ref (G112fb)
id00053Q		(MC14	FB)  : MUX 28		Ref (G103fb)
id00441			(MC7	FB)  : MUX 29		Ref (D58fb)
ADDR_0			(MC23	P)   : MUX 30		Ref (B25p)
ADDR_3			(MC20	P)   : MUX 31		Ref (B21p)
SIZ_0			(MC25	P)   : MUX 32		Ref (B29p)
id00003			(MC15	FB)  : MUX 33		Ref (G106fb)
ADDR_7			(MC29	P)   : MUX 34		Ref (C45p)
nDS			(MC34	FB)  : MUX 35		Ref (OE1)
id00476			(MC6	FB)  : MUX 36		Ref (D56fb)
id00474			(MC5	FB)  : MUX 38		Ref (D55fb)
nAS			(MC33	FB)  : MUX 39		Ref (GCLK)

FanIn assignment for block E [34]
{
ADDR_9,ADDR_7,ADDR_4,ADDR_3,ADDR_2,ADDR_5,ADDR_8,ADDR_1,ADDR_6,ADDR_0,
DATA_0,DATA_1,
RnW,
SIZ_1,SIZ_0,
id00003,id00425,id00431,id00423,id00420,id00421,id00435,id00467,id00479,id00433,id00064Q,id00468,id00469,id00429,id00422,id00470,
nISASEL,nDS,nAS,
}
Multiplexer assignment for block E
SIZ_1			(MC25	P)   : MUX 0		Ref (B27p)
id00003			(MC18	FB)  : MUX 1		Ref (G106fb)
ADDR_9			(MC28	P)   : MUX 2		Ref (C41p)
DATA_0			(MC3	P)   : MUX 3		Ref (C40p)
ADDR_7			(MC30	P)   : MUX 4		Ref (C45p)
id00425			(MC8	FB)  : MUX 6		Ref (E69fb)
DATA_1			(MC2	P)   : MUX 7		Ref (C38p)
id00431			(MC5	FB)  : MUX 8		Ref (D49fb)
ADDR_4			(MC20	P)   : MUX 9		Ref (B19p)
ADDR_3			(MC21	P)   : MUX 11		Ref (B21p)
id00423			(MC11	FB)  : MUX 12		Ref (E72fb)
ADDR_2			(MC22	P)   : MUX 13		Ref (B22p)
id00420			(MC1	FB)  : MUX 14		Ref (B23fb)
ADDR_5			(MC19	P)   : MUX 15		Ref (B17p)
SIZ_0			(MC26	P)   : MUX 16		Ref (B29p)
id00421			(MC13	FB)  : MUX 17		Ref (E75fb)
ADDR_8			(MC29	P)   : MUX 18		Ref (C43p)
id00435			(MC16	FB)  : MUX 19		Ref (E79fb)
id00467			(MC14	FB)  : MUX 21		Ref (E77fb)
RnW			(MC27	P)   : MUX 22		Ref (B30p)
id00479			(MC7	FB)  : MUX 24		Ref (E68fb)
ADDR_1			(MC23	P)   : MUX 25		Ref (B24p)
ADDR_6			(MC31	P)   : MUX 26		Ref (C46p)
id00433			(MC6	FB)  : MUX 27		Ref (D60fb)
id00064Q		(MC4	FB)  : MUX 29		Ref (C47fb)
ADDR_0			(MC24	P)   : MUX 30		Ref (B25p)
id00468			(MC15	FB)  : MUX 31		Ref (E78fb)
nISASEL			(MC32	P)   : MUX 32		Ref (H128p)
id00469			(MC12	FB)  : MUX 33		Ref (E74fb)
nDS			(MC34	FB)  : MUX 35		Ref (OE1)
id00429			(MC9	FB)  : MUX 36		Ref (E70fb)
id00422			(MC17	FB)  : MUX 37		Ref (F95fb)
id00470			(MC10	FB)  : MUX 38		Ref (E71fb)
nAS			(MC33	FB)  : MUX 39		Ref (GCLK)

FanIn assignment for block F [34]
{
XXL_824,XXL_820,XXL_821,XXL_822,XXL_823,
id00461,id00159Q,id00440,id00458,id00452,id00449,id00448,id00447,id00439,id00446,id00424,id00477,id00434,id00457,id00435,id00436,id00441,id00437,id00456,id00438,id00432,id00451,id00453,id00454,id00421,id00450,id00469,id00455,id00479,
}
Multiplexer assignment for block F
id00461			(MC27	FB)  : MUX 0		Ref (F88fb)
id00159Q		(MC7	FB)  : MUX 1		Ref (A16fb)
id00440			(MC14	FB)  : MUX 2		Ref (D52fb)
id00458			(MC30	FB)  : MUX 3		Ref (F91fb)
id00452			(MC23	FB)  : MUX 4		Ref (F84fb)
id00449			(MC6	FB)  : MUX 5		Ref (A12fb)
id00448			(MC5	FB)  : MUX 7		Ref (A10fb)
id00447			(MC3	FB)  : MUX 8		Ref (A7fb)
id00439			(MC16	FB)  : MUX 9		Ref (D63fb)
id00446			(MC1	FB)  : MUX 10		Ref (A2fb)
id00424			(MC4	FB)  : MUX 11		Ref (A9fb)
XXL_824			(MC8	FB)  : MUX 13		Ref (B28fb)
id00477			(MC13	FB)  : MUX 14		Ref (D51fb)
id00434			(MC10	FB)  : MUX 15		Ref (C41fb)
id00457			(MC25	FB)  : MUX 16		Ref (F86fb)
id00435			(MC20	FB)  : MUX 17		Ref (E79fb)
id00436			(MC9	FB)  : MUX 18		Ref (C36fb)
id00441			(MC15	FB)  : MUX 19		Ref (D58fb)
id00437			(MC12	FB)  : MUX 21		Ref (C48fb)
XXL_820			(MC26	FB)  : MUX 22		Ref (F87fb)
id00456			(MC31	FB)  : MUX 23		Ref (F92fb)
id00438			(MC11	FB)  : MUX 25		Ref (C46fb)
id00432			(MC21	FB)  : MUX 26		Ref (F81fb)
id00451			(MC32	FB)  : MUX 27		Ref (F93fb)
id00453			(MC24	FB)  : MUX 28		Ref (F85fb)
id00454			(MC28	FB)  : MUX 29		Ref (F89fb)
id00421			(MC19	FB)  : MUX 31		Ref (E75fb)
id00450			(MC2	FB)  : MUX 32		Ref (A4fb)
id00469			(MC18	FB)  : MUX 33		Ref (E74fb)
id00455			(MC33	FB)  : MUX 35		Ref (F94fb)
id00479			(MC17	FB)  : MUX 36		Ref (E68fb)
XXL_821			(MC29	FB)  : MUX 37		Ref (F90fb)
XXL_822			(MC22	FB)  : MUX 38		Ref (F83fb)
XXL_823			(MC34	FB)  : MUX 39		Ref (F96fb)

FanIn assignment for block G [34]
{
ADDR_9,ADDR_7,ADDR_1,ADDR_4,ADDR_6,ADDR_5,ADDR_0,ADDR_3,ADDR_8,ADDR_2,
ISA_RDY,
RnW,
SIZ_0,SIZ_1,
TMRINT,
XXL_818,
id00003,id00435,id00433,id00041QN,id00468,id00467,id00434,id00050Q,id00425,id00426,id00430,id00469,id00479,id00470,
nISASEL,nDS,nRST,nAS,
}
Multiplexer assignment for block G
id00003			(MC15	FB)  : MUX 1		Ref (G106fb)
ADDR_9			(MC26	P)   : MUX 2		Ref (C41p)
TMRINT			(MC1	P)   : MUX 3		Ref (A8p)
ADDR_7			(MC28	P)   : MUX 4		Ref (C45p)
id00435			(MC13	FB)  : MUX 5		Ref (E79fb)
XXL_818			(MC3	FB)  : MUX 6		Ref (D53fb)
id00433			(MC4	FB)  : MUX 7		Ref (D60fb)
id00041QN		(MC5	FB)  : MUX 8		Ref (E66fb)
ADDR_1			(MC21	P)   : MUX 9		Ref (B24p)
nISASEL			(MC31	P)   : MUX 10		Ref (H128p)
ADDR_4			(MC18	P)   : MUX 11		Ref (B19p)
ADDR_6			(MC29	P)   : MUX 12		Ref (C46p)
ADDR_5			(MC17	P)   : MUX 13		Ref (B17p)
ADDR_0			(MC22	P)   : MUX 14		Ref (B25p)
id00468			(MC12	FB)  : MUX 15		Ref (E78fb)
SIZ_0			(MC24	P)   : MUX 16		Ref (B29p)
ADDR_3			(MC19	P)   : MUX 17		Ref (B21p)
ADDR_8			(MC27	P)   : MUX 18		Ref (C43p)
id00467			(MC11	FB)  : MUX 19		Ref (E77fb)
id00434			(MC2	FB)  : MUX 21		Ref (C41fb)
RnW			(MC25	P)   : MUX 22		Ref (B30p)
id00050Q		(MC9	FB)  : MUX 23		Ref (E73fb)
SIZ_1			(MC23	P)   : MUX 24		Ref (B27p)
nDS			(MC34	FB)  : MUX 25		Ref (OE1)
id00425			(MC7	FB)  : MUX 26		Ref (E69fb)
id00426			(MC16	FB)  : MUX 27		Ref (G112fb)
ADDR_2			(MC20	P)   : MUX 29		Ref (B22p)
ISA_RDY			(MC30	P)   : MUX 30		Ref (H126p)
id00430			(MC14	FB)  : MUX 31		Ref (E80fb)
id00469			(MC10	FB)  : MUX 33		Ref (E74fb)
nRST			(MC33	FB)  : MUX 34		Ref (GCLR)
id00479			(MC6	FB)  : MUX 36		Ref (E68fb)
id00470			(MC8	FB)  : MUX 38		Ref (E71fb)
nAS			(MC32	FB)  : MUX 39		Ref (GCLK)

FanIn assignment for block H [26]
{
ADDR_6,ADDR_9,ADDR_7,ADDR_2,ADDR_5,ADDR_8,ADDR_1,ADDR_4,ADDR_0,ADDR_3,
RnW,
SIZ_0,SIZ_1,
XXL_819,XXL_814,
id00481,id00433,id00272QN,id00482,id00443,id00024QN,id00003,id00480,id00442,
nISASEL,nDS,
}
Multiplexer assignment for block H
ADDR_6			(MC24	P)   : MUX 0		Ref (C46p)
ADDR_9			(MC21	P)   : MUX 2		Ref (C41p)
id00481			(MC11	FB)  : MUX 3		Ref (H128fb)
ADDR_7			(MC23	P)   : MUX 4		Ref (C45p)
XXL_819			(MC3	FB)  : MUX 5		Ref (D57fb)
ADDR_2			(MC15	P)   : MUX 7		Ref (B22p)
id00433			(MC4	FB)  : MUX 9		Ref (D60fb)
nISASEL			(MC25	P)   : MUX 10		Ref (H128p)
XXL_814			(MC1	FB)  : MUX 11		Ref (C42fb)
id00272QN		(MC2	FB)  : MUX 12		Ref (D54fb)
ADDR_5			(MC12	P)   : MUX 13		Ref (B17p)
nDS			(MC26	FB)  : MUX 15		Ref (OE1)
SIZ_0			(MC19	P)   : MUX 16		Ref (B29p)
id00482			(MC10	FB)  : MUX 17		Ref (H127fb)
ADDR_8			(MC22	P)   : MUX 18		Ref (C43p)
id00443			(MC7	FB)  : MUX 21		Ref (H122fb)
RnW			(MC20	P)   : MUX 22		Ref (B30p)
ADDR_1			(MC16	P)   : MUX 23		Ref (B24p)
SIZ_1			(MC18	P)   : MUX 24		Ref (B27p)
id00024QN		(MC5	FB)  : MUX 25		Ref (E76fb)
ADDR_4			(MC13	P)   : MUX 27		Ref (B19p)
ADDR_0			(MC17	P)   : MUX 30		Ref (B25p)
ADDR_3			(MC14	P)   : MUX 31		Ref (B21p)
id00003			(MC6	FB)  : MUX 33		Ref (G106fb)
id00480			(MC9	FB)  : MUX 37		Ref (H126fb)
id00442			(MC8	FB)  : MUX 39		Ref (H124fb)

Creating JEDEC file isactl.jed ...

TQFP100 programmed logic:
-----------------------------------
!id00013Q = (SIZ_0 & !SIZ_1 & !nDS & !nAS);

!id00007Q = (ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

!id00116Q = (!id00479.Q & !id00477.Q);

DSACK_0 = (id00442.Q & !nDS);

DSACK_1 = (id00443.Q & !nDS);

ISA_AEN = !nISASEL;

nISA_IOWR = (!id00481.Q
	# nDS);

nISA_IORD = (!id00482.Q
	# nDS);

id00003.D = ((nAS & id00433.Q)
	# (id00003.Q & nDS & !RnW)
	# (id00003.Q & nAS));

id00422.D = (id00421.Q
	# id00432.Q);

id00424.D = id00428.Q;

id00432.D = id00424.Q;

id00428.D = id00431.Q;

id00445.D = id00479.Q;

id00050Q = ((ADDR_8 & ADDR_9 & !nISASEL & !ADDR_6 & !ADDR_5 & !ADDR_7 & SIZ_1 & !SIZ_0 & !nDS & !nAS & !ADDR_0)
	# (ADDR_8 & ADDR_9 & !nISASEL & !ADDR_6 & !ADDR_5 & !ADDR_7 & !SIZ_1 & SIZ_0 & !nDS & !nAS));

!id00067Q = (!ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0);

!id00066Q = (ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1);

nATASEL = (ADDR_3
	# ADDR_9
	# nISASEL
	# !ADDR_8
	# id00007Q);

nDUARTSEL = (!ADDR_9
	# nISASEL
	# !ADDR_3
	# id00007Q);

id00159Q = ((id00445.Q & !id00477.Q & id00455.Q)
	# (id00445.Q & !id00477.Q & id00454.Q)
	# (id00445.Q & !id00477.Q & id00449.Q)
	# (id00445.Q & !id00477.Q & id00448.Q)
	# (id00445.Q & !id00477.Q & id00447.Q)
	# (id00445.Q & !id00477.Q & id00446.Q)
	# (id00445.Q & !id00477.Q & id00461.Q)
	# (id00445.Q & !id00477.Q & id00460.Q)
	# (id00445.Q & !id00477.Q & id00459.Q)
	# (id00445.Q & !id00477.Q & id00458.Q)
	# (id00445.Q & !id00477.Q & id00453.Q)
	# (id00445.Q & !id00477.Q & id00452.Q)
	# (id00445.Q & !id00477.Q & id00451.Q)
	# (id00445.Q & !id00477.Q & id00450.Q)
	# (id00445.Q & !id00477.Q & id00465.Q)
	# (id00445.Q & !id00477.Q & id00464.Q)
	# (id00445.Q & !id00477.Q & id00463.Q)
	# (id00445.Q & !id00477.Q & id00462.Q)
	# (id00445.Q & !id00477.Q & id00457.Q)
	# (id00445.Q & id00456.Q & !id00477.Q));

!id00009Q = (SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

id00064Q = ((!ADDR_9 & !ADDR_8 & !ADDR_7 & ADDR_6 & !ADDR_5 & !ADDR_4 & !ADDR_3 & !ADDR_2 & !RnW & !nISASEL & id00003.Q & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_0)
	# (!ADDR_9 & !ADDR_8 & !ADDR_7 & ADDR_6 & !ADDR_5 & !ADDR_4 & !ADDR_3 & !ADDR_2 & !RnW & !nISASEL & id00003.Q & !ADDR_1 & SIZ_0 & !SIZ_1 & !nDS & !nAS));

!id00014Q = (ADDR_9 & ADDR_3 & !nISASEL & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

!id00106QN = (ADDR_9 & ADDR_8 & !ADDR_3 & ADDR_2 & ADDR_1 & ADDR_0 & !RnW & !nISASEL & id00003.Q & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

id00420.D = (id00003.Q & id00050Q);

id00478.D = ((id00003.Q & !ADDR_9 & !ADDR_8 & !ADDR_7 & ADDR_6 & !ADDR_5 & !ADDR_4 & !ADDR_3 & !ADDR_2 & !ADDR_1 & !ADDR_0 & RnW & !nISASEL & TMRINT.Q & SIZ_0 & !SIZ_1 & !nDS & !nAS)
	# (!id00003.Q & id00478.Q));

nATAAUXSEL = (ADDR_3
	# !ADDR_1
	# ADDR_0
	# XXL_813);

id00448.D = ((id00448.Q & !id00479.Q & !id00477.Q)
	# (!id00448.Q & id00159Q & !id00447.Q & !id00446.Q & id00116Q)
	# (id00448.Q & id00159Q & id00446.Q)
	# (id00448.Q & id00159Q & id00447.Q));

id00449.D = ((id00449.Q & id00159Q & id00446.Q)
	# (id00449.Q & !id00479.Q & !id00477.Q)
	# (!id00449.Q & id00159Q & !id00448.Q & !id00446.Q & !id00447.Q & id00116Q)
	# (id00449.Q & id00159Q & id00447.Q)
	# (id00449.Q & id00159Q & id00448.Q));

id00053Q = ((id00014Q & !id00050Q & id00009Q & !nAS & !nDS)
	# (id00014Q & !id00050Q & id00009Q & !nAS & RnW));

id00041QN = ((!ADDR_9 & !nISASEL & !ADDR_3 & !ADDR_8 & !ADDR_2 & !ADDR_0 & !ADDR_4 & !ADDR_5 & ADDR_6 & !ADDR_7)
	# (!ADDR_9 & !nISASEL & !ADDR_3 & !ADDR_8 & !ADDR_2 & !ADDR_1 & !ADDR_4 & !ADDR_5 & ADDR_6 & !ADDR_7)
	# (ADDR_9 & !nISASEL & !ADDR_3 & ADDR_8 & ADDR_2 & ADDR_1 & ADDR_0 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7));

id00429.D = (id00003.Q & !id00468.Q & id00467.Q & RnW & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

id00423.D = (id00003.Q & RnW & !id00467.Q & !id00468.Q & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

id00425.D = (RnW & id00003.Q & id00468.Q & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

id00434.D = ((id00434.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_0.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00434.Q & !id00003.Q)
	# (id00434.Q & id00013Q)
	# (id00434.Q & RnW));

id00435.D = ((id00435.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_1.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00435.Q & !id00003.Q)
	# (id00435.Q & id00013Q)
	# (id00435.Q & RnW));

id00438.D = ((id00438.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_4.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00438.Q & !id00003.Q)
	# (id00438.Q & id00013Q)
	# (id00438.Q & RnW));

id00436.D = ((id00436.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_2.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00436.Q & !id00003.Q)
	# (id00436.Q & id00013Q)
	# (id00436.Q & RnW));

id00437.D = ((id00437.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_3.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00437.Q & !id00003.Q)
	# (id00437.Q & id00013Q)
	# (id00437.Q & RnW));

id00439.D = ((id00439.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_5.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00439.Q & !id00003.Q)
	# (id00439.Q & id00013Q)
	# (id00439.Q & RnW));

id00440.D = ((id00440.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_6.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00440.Q & !id00003.Q)
	# (id00440.Q & id00013Q)
	# (id00440.Q & RnW));

id00441.D = ((id00441.Q & id00066Q)
	# (!RnW & id00003.Q & DATA_7.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (id00441.Q & !id00003.Q)
	# (id00441.Q & id00013Q)
	# (id00441.Q & RnW));

id00468.D = ((DATA_1.PIN & ADDR_9 & ADDR_8 & !ADDR_3 & ADDR_2 & ADDR_1 & ADDR_0 & !RnW & !nISASEL & id00003.Q & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# (id00106QN & id00468.Q));

id00467.D = ((DATA_0.PIN & ADDR_9 & ADDR_8 & !ADDR_3 & ADDR_2 & ADDR_1 & ADDR_0 & !RnW & !nISASEL & id00003.Q & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# (id00106QN & id00467.Q));

id00469.D = ((id00469.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_0.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00469.Q & !id00003.Q)
	# (id00469.Q & id00013Q)
	# (id00469.Q & RnW));

id00470.D = ((id00470.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_1.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00470.Q & !id00003.Q)
	# (id00470.Q & id00013Q)
	# (id00470.Q & RnW));

id00473.D = ((id00473.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_4.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00473.Q & !id00003.Q)
	# (id00473.Q & id00013Q)
	# (id00473.Q & RnW));

id00471.D = ((id00471.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_2.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00471.Q & !id00003.Q)
	# (id00471.Q & id00013Q)
	# (id00471.Q & RnW));

id00472.D = ((id00472.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_3.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00472.Q & !id00003.Q)
	# (id00472.Q & id00013Q)
	# (id00472.Q & RnW));

id00474.D = ((id00474.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_5.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00474.Q & !id00003.Q)
	# (id00474.Q & id00013Q)
	# (id00474.Q & RnW));

id00475.D = ((id00475.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_6.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00475.Q & !id00003.Q)
	# (id00475.Q & id00013Q)
	# (id00475.Q & RnW));

id00479.D = ((id00064Q & DATA_0.PIN & id00066Q & id00013Q)
	# (id00064Q & DATA_0.PIN & id00066Q & RnW)
	# (!id00064Q & id00479.Q)
	# (id00064Q & id00067Q & DATA_0.PIN & id00066Q));

id00476.D = ((id00476.Q & id00067Q)
	# (!RnW & id00003.Q & DATA_7.PIN & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0)
	# (id00476.Q & !id00003.Q)
	# (id00476.Q & id00013Q)
	# (id00476.Q & RnW));

id00477.D = ((!id00003.Q & id00477.Q)
	# (id00003.Q & !RnW & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1)
	# (id00003.Q & !RnW & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1));

nATABEN = (ADDR_3
	# (ADDR_0 & ADDR_9)
	# XXL_814);

!id00124QN = (!id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q);

TMRINT.D = ((id00479.Q & id00445.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00459.Q & !id00460.Q & !id00461.Q & !id00462.Q & !id00463.Q & !id00464.Q & !id00465.Q & !id00477.Q)
	# (TMRINT.Q & id00479.Q & id00477.Q)
	# (TMRINT.Q & !id00478.Q & id00479.Q & id00159Q));

id00446.D = ((id00446.Q & !id00479.Q & !id00477.Q)
	# (!id00446.Q & id00479.Q & id00159Q));

id00447.D = ((id00447.Q & id00479.Q & id00159Q & id00446.Q)
	# (!id00447.Q & id00479.Q & id00159Q & !id00446.Q)
	# (id00447.Q & !id00479.Q & !id00477.Q));

id00450.D = ((id00159Q & id00450.Q & id00448.Q)
	# (id00159Q & id00450.Q & id00446.Q)
	# XXL_815);

id00426.D = (id00425.Q
	# id00430.Q
	# (id00003.Q & !RnW & id00468.Q & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# (id00003.Q & !SIZ_1 & SIZ_0 & !nDS & !nAS & ADDR_3 & ADDR_9 & !nISASEL & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# (id00426.Q & !ISA_RDY));

id00427.D = ((ADDR_8 & !nISASEL & !ADDR_3 & id00003.Q & RnW & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7 & !ADDR_9)
	# (ADDR_8 & !nISASEL & !ADDR_3 & id00003.Q & RnW & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_0 & ADDR_2 & ADDR_1 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7));

id00433.D = ((id00003.Q & id00053Q & id00007Q)
	# (id00003.Q & id00053Q & !ADDR_8)
	# (id00003.Q & id00053Q & nISASEL)
	# (ADDR_9 & id00003.Q & id00053Q & !ADDR_2)
	# (ADDR_9 & id00003.Q & id00053Q & !ADDR_1)
	# (id00003.Q & id00053Q & ADDR_3)
	# (!nAS & id00433.Q)
	# (ISA_RDY & id00426.Q)
	# (id00003.Q & id00053Q & id00013Q)
	# (ADDR_9 & ADDR_0 & id00003.Q & id00053Q));

id00430.D = (id00422.Q
	# id00429.Q
	# (!RnW & id00003.Q & !id00468.Q & id00467.Q & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# id00420.Q);

id00431.D = ((ADDR_8 & !nISASEL & !ADDR_3 & id00003.Q & !RnW & SIZ_0 & !SIZ_1 & !nDS & !nAS & !ADDR_9 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# (ADDR_8 & !nISASEL & !ADDR_3 & id00003.Q & !RnW & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7 & !ADDR_0 & ADDR_2 & ADDR_1)
	# id00427.Q);

DATA_0 = (XXL_816);

DATA_3 = ((id00437.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00472.Q)
	# !id00041QN);

DATA_1 = (XXL_817);

DATA_2 = ((id00436.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00471.Q)
	# !id00041QN);

DATA_4 = ((id00438.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00473.Q)
	# !id00041QN);

DATA_5 = ((id00439.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00474.Q)
	# !id00041QN);

DATA_6 = ((id00440.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00475.Q)
	# !id00041QN);

DATA_7 = ((id00441.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00476.Q)
	# !id00041QN);

id00451.D = ((id00451.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00435.Q)
	# (id00159Q & id00451.Q & id00124QN)
	# (id00159Q & !id00451.Q & id00116Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00024QN = ((!id00433.Q & !id00003.Q & !id00420.Q & !id00421.Q & !id00425.Q & !id00429.Q & !id00431.Q)
	# (!nAS & id00003.Q & !RnW & !id00467.Q & !id00468.Q & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# (id00003.Q & id00014Q & id00009Q)
	# (id00003.Q & RnW & id00014Q)
	# (!nAS & id00433.Q));

id00061QN = ((ADDR_8 & !ADDR_3 & !nISASEL & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_2 & ADDR_1 & !ADDR_0 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7)
	# XXL_818);

id00421.D = (id00423.Q
	# (id00003.Q & !id00468.Q & !RnW & !id00467.Q & SIZ_1 & !ADDR_0 & !SIZ_0 & !nDS & !nAS & !ADDR_3 & !ADDR_9 & !nISASEL & ADDR_8 & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7));

id00272QN = ((id00426.Q & !ISA_RDY)
	# (id00433.Q & !nAS)
	# (id00003.Q & id00013Q)
	# (id00003.Q & !id00041QN)
	# (!id00003.Q & !id00426.Q & !id00433.Q));

id00452.D = ((id00452.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00436.Q)
	# (id00159Q & id00452.Q & id00124QN)
	# (id00159Q & id00452.Q & id00451.Q)
	# (id00159Q & !id00452.Q & !id00451.Q & id00116Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00442.D = ((id00272QN & id00442.Q)
	# (!id00272QN & SIZ_0 & !id00433.Q));

id00443.D = ((id00272QN & id00443.Q)
	# (!id00272QN & SIZ_1 & !id00433.Q));

BERR.D = ((!id00061QN & !id00433.Q)
	# (id00061QN & BERR.Q));

id00480.D = ((id00480.Q & id00003.Q & !RnW)
	# XXL_819);

id00481.D = ((id00024QN & id00481.Q)
	# (!id00024QN & !RnW & !id00433.Q));

id00482.D = ((id00024QN & id00482.Q)
	# (!id00024QN & RnW & !id00433.Q));

id00453.D = ((id00159Q & id00453.Q & id00124QN)
	# XXL_820);

!id00132QN = (!id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q);

id00454.D = ((id00159Q & id00454.Q & id00124QN)
	# (id00159Q & id00454.Q & id00453.Q)
	# XXL_821);

id00455.D = ((id00455.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00439.Q)
	# (id00159Q & id00455.Q & id00132QN)
	# (id00159Q & !id00455.Q & id00116Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00456.D = ((id00456.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00440.Q)
	# (id00159Q & id00456.Q & id00132QN)
	# (id00159Q & id00456.Q & id00455.Q)
	# (id00159Q & !id00456.Q & !id00455.Q & id00116Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00457.D = ((id00159Q & id00457.Q & id00132QN)
	# XXL_822);

!id00140QN = (!id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q);

id00458.D = ((id00159Q & id00458.Q & id00132QN)
	# (id00159Q & id00458.Q & id00457.Q)
	# XXL_823);

id00459.D = ((id00459.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00470.Q)
	# (id00159Q & id00459.Q & id00140QN)
	# (id00159Q & !id00459.Q & id00116Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00460.D = ((id00460.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00471.Q)
	# (id00159Q & id00460.Q & id00140QN)
	# (id00159Q & id00460.Q & id00459.Q)
	# (id00159Q & !id00460.Q & !id00459.Q & id00116Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00461.D = ((id00159Q & id00461.Q & id00140QN)
	# XXL_824);

!id00148QN = (!id00459.Q & !id00460.Q & !id00461.Q & !id00462.Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q);

id00462.D = ((id00159Q & id00462.Q & id00140QN)
	# (id00159Q & id00462.Q & id00461.Q)
	# XXL_825);

id00463.D = ((id00463.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00474.Q)
	# (id00159Q & id00463.Q & id00148QN)
	# (id00159Q & !id00463.Q & id00116Q & !id00459.Q & !id00460.Q & !id00461.Q & !id00462.Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00464.D = ((id00464.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00475.Q)
	# (id00159Q & id00464.Q & id00148QN)
	# (id00159Q & id00464.Q & id00463.Q)
	# (id00159Q & !id00464.Q & !id00463.Q & id00116Q & !id00459.Q & !id00460.Q & !id00461.Q & !id00462.Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q));

id00465.D = ((id00159Q & !id00465.Q & !id00463.Q & !id00464.Q & id00116Q & !id00459.Q & !id00460.Q & !id00461.Q & !id00462.Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# XXL_826);

!XXL_813 = (ADDR_9 & ADDR_8 & ADDR_2 & !nISASEL & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7);

XXL_814 = (id00007Q
	# !ADDR_8
	# nISASEL
	# (ADDR_9 & !ADDR_2)
	# (ADDR_9 & !ADDR_1));

XXL_815 = ((id00159Q & id00450.Q & id00449.Q)
	# (id00159Q & id00450.Q & id00447.Q)
	# (id00159Q & !id00450.Q & !id00446.Q & !id00449.Q & !id00447.Q & !id00448.Q & id00116Q)
	# (id00450.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00434.Q));

XXL_816 = (!id00041QN
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1 & id00479.Q)
	# (!ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & id00469.Q)
	# (ADDR_0 & ADDR_9 & !nISASEL & ADDR_6 & ADDR_4 & !ADDR_3 & ADDR_5 & ADDR_7 & ADDR_8 & ADDR_2 & ADDR_1 & id00467.Q)
	# (id00434.Q & ADDR_0 & !ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1));

XXL_817 = (!id00041QN
	# (!ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1 & !ADDR_0 & TMRINT.Q)
	# (!ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & !ADDR_1 & ADDR_0 & id00435.Q)
	# (!ADDR_9 & !nISASEL & ADDR_6 & !ADDR_4 & !ADDR_3 & !ADDR_5 & !ADDR_7 & !ADDR_8 & !ADDR_2 & ADDR_1 & !ADDR_0 & id00470.Q)
	# (ADDR_9 & !nISASEL & ADDR_6 & ADDR_4 & !ADDR_3 & ADDR_5 & ADDR_7 & ADDR_8 & ADDR_2 & ADDR_1 & ADDR_0 & id00468.Q));

XXL_818 = ((SIZ_0 & !SIZ_1 & !nDS & !nAS & id00041QN)
	# (!nAS & id00433.Q)
	# (!id00433.Q & !id00003.Q)
	# (id00003.Q & !id00053Q)
	# (ADDR_8 & !ADDR_3 & !nISASEL & SIZ_0 & !SIZ_1 & !nDS & !nAS & ADDR_4 & ADDR_5 & ADDR_6 & ADDR_7 & !ADDR_9));

XXL_819 = ((id00480.Q & !id00433.Q)
	# (id00480.Q & id00003.Q & id00013Q)
	# (id00003.Q & RnW & !id00433.Q & id00041QN & SIZ_0 & !SIZ_1 & !nDS & !nAS)
	# (id00480.Q & id00003.Q & !id00041QN)
	# (id00480.Q & !nAS));

XXL_820 = ((id00159Q & !id00453.Q & !id00452.Q & !id00451.Q & id00116Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# (id00453.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00437.Q)
	# (id00159Q & id00453.Q & id00451.Q)
	# (id00159Q & id00453.Q & id00452.Q));

XXL_821 = ((id00159Q & id00454.Q & id00451.Q)
	# (id00159Q & !id00454.Q & !id00453.Q & !id00451.Q & !id00452.Q & id00116Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# (id00454.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00438.Q)
	# (id00159Q & id00454.Q & id00452.Q));

XXL_822 = ((id00159Q & !id00457.Q & !id00456.Q & !id00455.Q & id00116Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# (id00457.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00441.Q)
	# (id00159Q & id00457.Q & id00455.Q)
	# (id00159Q & id00457.Q & id00456.Q));

XXL_823 = ((id00159Q & id00458.Q & id00455.Q)
	# (id00159Q & !id00458.Q & !id00457.Q & !id00455.Q & !id00456.Q & id00116Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# (id00458.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00469.Q)
	# (id00159Q & id00458.Q & id00456.Q));

XXL_824 = ((id00159Q & !id00461.Q & !id00460.Q & !id00459.Q & id00116Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# (id00461.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00472.Q)
	# (id00159Q & id00461.Q & id00459.Q)
	# (id00159Q & id00461.Q & id00460.Q));

XXL_825 = ((id00159Q & id00462.Q & id00459.Q)
	# (id00159Q & !id00462.Q & !id00461.Q & !id00459.Q & !id00460.Q & id00116Q & !id00455.Q & !id00456.Q & !id00457.Q & !id00458.Q & !id00451.Q & !id00452.Q & !id00453.Q & !id00454.Q & !id00446.Q & !id00447.Q & !id00448.Q & !id00449.Q & !id00450.Q)
	# (id00462.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00473.Q)
	# (id00159Q & id00462.Q & id00460.Q));

XXL_826 = ((id00465.Q & !id00479.Q & !id00477.Q)
	# (!id00159Q & id00116Q & id00476.Q)
	# (id00159Q & id00465.Q & id00464.Q)
	# (id00159Q & id00465.Q & id00148QN)
	# (id00159Q & id00465.Q & id00463.Q));

id00003.C = CPU_CLK;

id00003.AP = !nRST;

id00422.C = CPU_CLK;

id00422.AR = !nRST;

id00424.C = CPU_CLK;

id00424.AR = !nRST;

id00432.C = CPU_CLK;

id00432.AR = !nRST;

id00428.C = CPU_CLK;

id00428.AR = !nRST;

id00445.C = CPU_CLK;

id00445.AR = !nRST;

id00420.C = CPU_CLK;

id00420.AR = !nRST;

id00478.C = CPU_CLK;

id00478.AR = !nRST;

id00448.C = CPU_CLK;

id00448.AR = !nRST;

id00449.C = CPU_CLK;

id00449.AR = !nRST;

id00429.C = CPU_CLK;

id00429.AR = !nRST;

id00423.C = CPU_CLK;

id00423.AR = !nRST;

id00425.C = CPU_CLK;

id00425.AR = !nRST;

id00434.C = CPU_CLK;

id00434.AR = !nRST;

id00435.C = CPU_CLK;

id00435.AR = !nRST;

id00438.C = CPU_CLK;

id00438.AR = !nRST;

id00436.C = CPU_CLK;

id00436.AR = !nRST;

id00437.C = CPU_CLK;

id00437.AR = !nRST;

id00439.C = CPU_CLK;

id00439.AR = !nRST;

id00440.C = CPU_CLK;

id00440.AR = !nRST;

id00441.C = CPU_CLK;

id00441.AR = !nRST;

id00468.C = CPU_CLK;

id00468.AR = !nRST;

id00467.C = CPU_CLK;

id00467.AR = !nRST;

id00469.C = CPU_CLK;

id00469.AR = !nRST;

id00470.C = CPU_CLK;

id00470.AR = !nRST;

id00473.C = CPU_CLK;

id00473.AR = !nRST;

id00471.C = CPU_CLK;

id00471.AR = !nRST;

id00472.C = CPU_CLK;

id00472.AR = !nRST;

id00474.C = CPU_CLK;

id00474.AR = !nRST;

id00475.C = CPU_CLK;

id00475.AR = !nRST;

id00479.C = CPU_CLK;

id00479.AR = !nRST;

id00476.C = CPU_CLK;

id00476.AR = !nRST;

id00477.C = CPU_CLK;

id00477.AR = !nRST;

TMRINT.C = CPU_CLK;

TMRINT.AR = !nRST;

id00446.C = CPU_CLK;

id00446.AR = !nRST;

id00447.C = CPU_CLK;

id00447.AR = !nRST;

id00450.C = CPU_CLK;

id00450.AR = !nRST;

id00426.C = CPU_CLK;

id00426.AR = !nRST;

id00427.C = CPU_CLK;

id00427.AR = !nRST;

id00433.C = CPU_CLK;

id00433.AR = !nRST;

id00430.C = CPU_CLK;

id00430.AR = !nRST;

id00431.C = CPU_CLK;

id00431.AR = !nRST;

DATA_0.OE = (id00480.Q & !nDS);

DATA_3.OE = (id00480.Q & !nDS);

DATA_1.OE = (id00480.Q & !nDS);

DATA_2.OE = (id00480.Q & !nDS);

DATA_4.OE = (id00480.Q & !nDS);

DATA_5.OE = (id00480.Q & !nDS);

DATA_6.OE = (id00480.Q & !nDS);

DATA_7.OE = (id00480.Q & !nDS);

id00451.C = CPU_CLK;

id00451.AR = !nRST;

id00421.C = CPU_CLK;

id00421.AR = !nRST;

id00452.C = CPU_CLK;

id00452.AR = !nRST;

id00442.C = CPU_CLK;

id00442.AR = !nRST;

id00443.C = CPU_CLK;

id00443.AR = !nRST;

BERR.C = CPU_CLK;

BERR.AR = !nRST;

id00480.C = CPU_CLK;

id00480.AR = !nRST;

id00481.C = CPU_CLK;

id00481.AR = !nRST;

id00482.C = CPU_CLK;

id00482.AR = !nRST;

id00453.C = CPU_CLK;

id00453.AR = !nRST;

id00454.C = CPU_CLK;

id00454.AR = !nRST;

id00455.C = CPU_CLK;

id00455.AR = !nRST;

id00456.C = CPU_CLK;

id00456.AR = !nRST;

id00457.C = CPU_CLK;

id00457.AR = !nRST;

id00458.C = CPU_CLK;

id00458.AR = !nRST;

id00459.C = CPU_CLK;

id00459.AR = !nRST;

id00460.C = CPU_CLK;

id00460.AR = !nRST;

id00461.C = CPU_CLK;

id00461.AR = !nRST;

id00462.C = CPU_CLK;

id00462.AR = !nRST;

id00463.C = CPU_CLK;

id00463.AR = !nRST;

id00464.C = CPU_CLK;

id00464.AR = !nRST;

id00465.C = CPU_CLK;

id00465.AR = !nRST;


TQFP100 Pin/Node Placement:
------------------------------------
Pin 1  = DSACK_0; /* MC 3 */
Pin 2  = DSACK_1; /* MC 1 */
Pin 4  = TDI; /* MC 32 */
Pin 5  = RnW; /* MC 30 */
Pin 6  = SIZ_0; /* MC 29 */
Pin 7  = SIZ_1; /* MC 27 */
Pin 8  = ADDR_0; /* MC 25 */
Pin 9  = ADDR_1; /* MC 24 */
Pin 10 = ADDR_2; /* MC 22 */ 
Pin 12 = ADDR_3; /* MC 21 */ 
Pin 13 = ADDR_4; /* MC 19 */ 
Pin 14 = ADDR_5; /* MC 17 */ 
Pin 15 = TMS; /* MC 48 */ 
Pin 16 = ADDR_6; /* MC 46 */ 
Pin 17 = ADDR_7; /* MC 45 */ 
Pin 19 = ADDR_8; /* MC 43 */ 
Pin 20 = ADDR_9; /* MC 41 */ 
Pin 21 = DATA_0; /* MC 40 */ 
Pin 22 = DATA_1; /* MC 38 */ 
Pin 23 = DATA_2; /* MC 37 */ 
Pin 24 = DATA_3; /* MC 35 */ 
Pin 25 = DATA_4; /* MC 33 */ 
Pin 27 = DATA_5; /* MC 64 */ 
Pin 28 = DATA_6; /* MC 62 */ 
Pin 29 = DATA_7; /* MC 61 */ 
Pin 62 = TCK; /* MC 96 */ 
Pin 71 = nDUARTSEL; /* MC 109 */ 
Pin 72 = nATASEL; /* MC 110 */ 
Pin 73 = TDO; /* MC 112 */ 
Pin 75 = nATAAUXSEL; /* MC 113 */ 
Pin 76 = nATABEN; /* MC 115 */ 
Pin 77 = nISA_IORD; /* MC 117 */ 
Pin 78 = nISA_IOWR; /* MC 118 */ 
Pin 79 = ISA_AEN; /* MC 120 */ 
Pin 84 = ISA_RDY; /* MC 126 */ 
Pin 85 = nISASEL; /* MC 128 */ 
Pin 87 = nAS;
Pin 88 = nDS;
Pin 89 = nRST;
Pin 90 = CPU_CLK;
Pin 98 = TMRINT; /* MC  8 */
Pin 100 = BERR; /* MC  5 */
PINNODE 311 = id00116Q; /* MC 11 Foldback */
PINNODE 325 = id00148QN; /* MC 25 Foldback */
PINNODE 326 = id00140QN; /* MC 26 Foldback */
PINNODE 327 = FB_2_id00116Q; /* MC 27 Foldback */
PINNODE 337 = id00066Q; /* MC 37 Foldback */
PINNODE 338 = id00067Q; /* MC 38 Foldback */
PINNODE 339 = id00007Q; /* MC 39 Foldback */
PINNODE 340 = id00013Q; /* MC 40 Foldback */
PINNODE 351 = FB_4_id00066Q; /* MC 51 Foldback */
PINNODE 361 = FB_4_id00067Q; /* MC 61 Foldback */
PINNODE 362 = FB_4_id00007Q; /* MC 62 Foldback */
PINNODE 364 = FB_4_id00013Q; /* MC 64 Foldback */
PINNODE 366 = FB_5_id00013Q; /* MC 66 Foldback */
PINNODE 372 = id00106QN; /* MC 72 Foldback */
PINNODE 373 = id00014Q; /* MC 73 Foldback */
PINNODE 375 = id00009Q; /* MC 75 Foldback */
PINNODE 377 = FB_5_id00066Q; /* MC 77 Foldback */
PINNODE 378 = FB_5_id00067Q; /* MC 78 Foldback */
PINNODE 389 = FB_6_id00140QN; /* MC 89 Foldback */
PINNODE 391 = id00132QN; /* MC 91 Foldback */
PINNODE 393 = id00124QN; /* MC 93 Foldback */
PINNODE 394 = FB_6_id00116Q; /* MC 94 Foldback */
PINNODE 406 = FB_7_id00014Q; /* MC 106 Foldback */
PINNODE 407 = FB_7_id00009Q; /* MC 107 Foldback */
PINNODE 409 = FB_7_id00007Q; /* MC 109 Foldback */
PINNODE 428 = XXL_813; /* MC 128 Foldback */
PINNODE 602 = id00446; /* MC 2 Feedback */
PINNODE 604 = id00450; /* MC 4 Feedback */
PINNODE 607 = id00447; /* MC 7 Feedback */
PINNODE 609 = id00424; /* MC 9 Feedback */
PINNODE 610 = id00448; /* MC 10 Feedback */
PINNODE 611 = id00445; /* MC 11 Feedback */
PINNODE 612 = id00449; /* MC 12 Feedback */
PINNODE 616 = id00159Q; /* MC 16 Feedback */
PINNODE 623 = id00420; /* MC 23 Feedback */
PINNODE 624 = id00465; /* MC 24 Feedback */
PINNODE 625 = id00462; /* MC 25 Feedback */
PINNODE 626 = id00459; /* MC 26 Feedback */
PINNODE 627 = id00463; /* MC 27 Feedback */
PINNODE 628 = XXL_824; /* MC 28 Feedback */
PINNODE 629 = id00460; /* MC 29 Feedback */
PINNODE 630 = XXL_825; /* MC 30 Feedback */
PINNODE 631 = id00464; /* MC 31 Feedback */
PINNODE 632 = XXL_826; /* MC 32 Feedback */
PINNODE 634 = id00473; /* MC 34 Feedback */
PINNODE 636 = id00436; /* MC 36 Feedback */
PINNODE 639 = id00478; /* MC 39 Feedback */
PINNODE 641 = id00434; /* MC 41 Feedback */
PINNODE 642 = XXL_814; /* MC 42 Feedback */
PINNODE 643 = id00427; /* MC 43 Feedback */
PINNODE 644 = id00472; /* MC 44 Feedback */
PINNODE 645 = id00471; /* MC 45 Feedback */
PINNODE 646 = id00438; /* MC 46 Feedback */
PINNODE 647 = id00064Q; /* MC 47 Feedback */
PINNODE 648 = id00437; /* MC 48 Feedback */
PINNODE 649 = id00431; /* MC 49 Feedback */
PINNODE 650 = id00475; /* MC 50 Feedback */
PINNODE 651 = id00477; /* MC 51 Feedback */
PINNODE 652 = id00440; /* MC 52 Feedback */
PINNODE 653 = XXL_818; /* MC 53 Feedback */
PINNODE 654 = id00272QN; /* MC 54 Feedback */
PINNODE 655 = id00474; /* MC 55 Feedback */
PINNODE 656 = id00476; /* MC 56 Feedback */
PINNODE 657 = XXL_819; /* MC 57 Feedback */
PINNODE 658 = id00441; /* MC 58 Feedback */
PINNODE 660 = id00433; /* MC 60 Feedback */
PINNODE 663 = id00439; /* MC 63 Feedback */
PINNODE 666 = id00041QN; /* MC 66 Feedback */
PINNODE 667 = id00428; /* MC 67 Feedback */
PINNODE 668 = id00479; /* MC 68 Feedback */
PINNODE 669 = id00425; /* MC 69 Feedback */
PINNODE 670 = id00429; /* MC 70 Feedback */
PINNODE 671 = id00470; /* MC 71 Feedback */
PINNODE 672 = id00423; /* MC 72 Feedback */
PINNODE 673 = id00050Q; /* MC 73 Feedback */
PINNODE 674 = id00469; /* MC 74 Feedback */
PINNODE 675 = id00421; /* MC 75 Feedback */
PINNODE 676 = id00024QN; /* MC 76 Feedback */
PINNODE 677 = id00467; /* MC 77 Feedback */
PINNODE 678 = id00468; /* MC 78 Feedback */
PINNODE 679 = id00435; /* MC 79 Feedback */
PINNODE 680 = id00430; /* MC 80 Feedback */
PINNODE 681 = id00432; /* MC 81 Feedback */
PINNODE 682 = XXL_815; /* MC 82 Feedback */
PINNODE 683 = XXL_822; /* MC 83 Feedback */
PINNODE 684 = id00452; /* MC 84 Feedback */
PINNODE 685 = id00453; /* MC 85 Feedback */
PINNODE 686 = id00457; /* MC 86 Feedback */
PINNODE 687 = XXL_820; /* MC 87 Feedback */
PINNODE 688 = id00461; /* MC 88 Feedback */
PINNODE 689 = id00454; /* MC 89 Feedback */
PINNODE 690 = XXL_821; /* MC 90 Feedback */
PINNODE 691 = id00458; /* MC 91 Feedback */
PINNODE 692 = id00456; /* MC 92 Feedback */
PINNODE 693 = id00451; /* MC 93 Feedback */
PINNODE 694 = id00455; /* MC 94 Feedback */
PINNODE 695 = id00422; /* MC 95 Feedback */
PINNODE 696 = XXL_823; /* MC 96 Feedback */
PINNODE 698 = XXL_816; /* MC 98 Feedback */
PINNODE 700 = id00061QN; /* MC 100 Feedback */
PINNODE 703 = id00053Q; /* MC 103 Feedback */
PINNODE 706 = id00003; /* MC 106 Feedback */
PINNODE 708 = XXL_817; /* MC 108 Feedback */
PINNODE 712 = id00426; /* MC 112 Feedback */
PINNODE 722 = id00443; /* MC 122 Feedback */
PINNODE 724 = id00442; /* MC 124 Feedback */
PINNODE 726 = id00480; /* MC 126 Feedback */
PINNODE 727 = id00482; /* MC 127 Feedback */
PINNODE 728 = id00481; /* MC 128 Feedback */

** Resource Usage **


DCERP Field = Summary of Allocations.
|||||
|||||_Preset [p,-]       ==  p = PT preset, - No Preset.
||||
||||__Reset [g,r,-]      ==  g= Global AR, r = PT reset, - No reset.
|||
|||___Clock Enable [e,-] ==  e = Product Term, - always enabled.
||
||____Clock [c,g,-],     ==  c = Product term, g = Global term, - No Clock.
|
|_____Type [C,D,L,T],    ==  Register type C= combin, D=dff, L=latch, T=tff.

For input only = INPUT.


SO Pin Options Field = Summary of Allocations.
||
||_OpenCol [o,-]      ==  o = Open Collector enabled, - CMOS drive.
|
|__Slew [s,f]         ==  Output Slew/Drive rate, s = slow/low, f = fast/hi drive.


MCell Pin# Oe   PinDrive   DCERP  FBDrive   DCERP  Foldback       CascadeOut     TotPT SO
MC1   2    on   DSACK_1    C----  --               --             --             1     f- 
MC2   0         --                id00446   Dg-g-  --             --             2     f- 
MC3   1    on   DSACK_0    C----  --               --             --             1     f- 
MC4   0         --                id00450   Dg-g-  --             --             3     f- 
MC5   100  on   BERR       Dg-g-  --               --             --             2     f- 
MC6   99        --                --               --             --             0     f- 
MC7   0         --                id00447   Dg-g-  --             --             3     f- 
MC8   98   on   TMRINT     Dg-g-  --               --             --             3     f- 
MC9   97        --                id00424   Dg-g-  --             --             1     f- 
MC10  0         --                id00448   Dg-g-  --             --             4     f- 
MC11  96        --                id00445   Dg-g-  id00116Q       --             2     f- 
MC12  0         --                id00449   Dg-g-  NA             --             5     f- 
MC13  94        --                --               NA             -> id00159Q    5     f- 
MC14  93        --                --               NA             -> id00159Q    5     f- 
MC15  0         --                --               NA             -> id00159Q    5     f- 
MC16  92        --                id00159Q  C----  NA             --             5     f- 
MC17  14   --   ADDR_5     INPUT  --               --             --             0     f- 
MC18  0         --                --               --             --             0     f- 
MC19  13   --   ADDR_4     INPUT  --               --             --             0     f- 
MC20  0         --                --               --             --             0     f- 
MC21  12   --   ADDR_3     INPUT  --               --             --             0     f- 
MC22  10   --   ADDR_2     INPUT  --               --             --             0     f- 
MC23  0         --                id00420   Dg-g-  --             --             1     f- 
MC24  9    --   ADDR_1     INPUT  id00465   Dg-g-  --             --             2     f- 
MC25  8    --   ADDR_0     INPUT  id00462   Dg-g-  id00148QN      --             4     f- 
MC26  0         --                id00459   Dg-g-  id00140QN      --             5     f- 
MC27  7    --   SIZ_1      INPUT  id00463   Dg-g-  FB_2_id00116Q  --             5     f- 
MC28  0         --                XXL_824   C----  NA             --             5     f- 
MC29  6    --   SIZ_0      INPUT  id00460   Dg-g-  NA             --             5     f- 
MC30  5    --   RnW        INPUT  XXL_825   C----  NA             --             5     f- 
MC31  0         --                id00464   Dg-g-  NA             --             5     f- 
MC32  4    --   TDI        INPUT  XXL_826   C----  NA             --             5     f- 
MC33  25   PT   DATA_4     C----  --               --             --             4     f- 
MC34  0         --                id00473   Dg-g-  NA             --             5     f- 
MC35  24   PT   DATA_3     C----  --               --             --             4     f- 
MC36  0         --                id00436   Dg-g-  NA             --             5     f- 
MC37  23   PT   DATA_2     C----  --               id00066Q       --             5     f- 
MC38  22   PT   DATA_1     C----  --               id00067Q       --             3     f- 
MC39  0         --                id00478   Dg-g-  id00007Q       --             3     f- 
MC40  21   PT   DATA_0     C----  --               id00013Q       --             3     f- 
MC41  20   --   ADDR_9     INPUT  id00434   Dg-g-  NA             --             5     f- 
MC42  0         --                XXL_814   C----  NA             --             5     f- 
MC43  19   --   ADDR_8     INPUT  id00427   Dg-g-  --             --             2     f- 
MC44  0         --                id00472   Dg-g-  NA             --             5     f- 
MC45  17   --   ADDR_7     INPUT  id00471   Dg-g-  NA             --             5     f- 
MC46  16   --   ADDR_6     INPUT  id00438   Dg-g-  NA             --             5     f- 
MC47  0         --                id00064Q  C----  --             --             2     f- 
MC48  15   --   TMS        INPUT  id00437   Dg-g-  NA             --             5     f- 
MC49  37        --                id00431   Dg-g-  --             --             3     f- 
MC50  0         --                id00475   Dg-g-  NA             --             5     f- 
MC51  36        --                id00477   Dg-g-  FB_4_id00066Q  --             4     f- 
MC52  0         --                id00440   Dg-g-  NA             --             5     f- 
MC53  35        --                XXL_818   C----  NA             --             5     f- 
MC54  33        --                id00272QN C----  NA             --             5     f- 
MC55  0         --                id00474   Dg-g-  NA             --             5     f- 
MC56  32        --                id00476   Dg-g-  NA             --             5     f- 
MC57  31        --                XXL_819   C----  NA             --             5     f- 
MC58  0         --                id00441   Dg-g-  NA             --             5     f- 
MC59  30        --                --               NA             -> id00433     5     f- 
MC60  0         --                id00433   Dg-g-  NA             --             5     f- 
MC61  29   PT   DATA_7     C----  --               FB_4_id00067Q  --             5     f- 
MC62  28   PT   DATA_6     C----  --               FB_4_id00007Q  --             5     f- 
MC63  0         --                id00439   Dg-g-  NA             --             5     f- 
MC64  27   PT   DATA_5     C----  --               FB_4_id00013Q  --             5     f- 
MC65  40        --                --               --             --             0     f- 
MC66  0         --                id00041QN C----  FB_5_id00013Q  --             4     f- 
MC67  41        --                id00428   Dg-g-  --             --             1     f- 
MC68  0         --                id00479   Dg-g-  --             --             4     f- 
MC69  42        --                id00425   Dg-g-  --             --             1     f- 
MC70  44        --                id00429   Dg-g-  --             --             1     f- 
MC71  0         --                id00470   Dg-g-  NA             --             5     f- 
MC72  45        --                id00423   Dg-g-  id00106QN      --             2     f- 
MC73  46        --                id00050Q  C----  id00014Q       --             3     f- 
MC74  0         --                id00469   Dg-g-  NA             --             5     f- 
MC75  47        --                id00421   Dg-g-  id00009Q       --             3     f- 
MC76  0         --                id00024QN C----  NA             --             5     f- 
MC77  48        --                id00467   Dg-g-  FB_5_id00066Q  --             3     f- 
MC78  49        --                id00468   Dg-g-  FB_5_id00067Q  --             3     f- 
MC79  0         --                id00435   Dg-g-  NA             --             5     f- 
MC80  50        --                id00430   Dg-g-  --             --             4     f- 
MC81  52        --                id00432   Dg-g-  --             --             1     f- 
MC82  0         --                XXL_815   C----  NA             --             5     f- 
MC83  53        --                XXL_822   C----  NA             --             5     f- 
MC84  0         --                id00452   Dg-g-  NA             --             5     f- 
MC85  54        --                id00453   Dg-g-  --             --             2     f- 
MC86  55        --                id00457   Dg-g-  --             --             2     f- 
MC87  0         --                XXL_820   C----  NA             --             5     f- 
MC88  56        --                id00461   Dg-g-  --             --             2     f- 
MC89  57        --                id00454   Dg-g-  FB_6_id00140QN --             4     f- 
MC90  0         --                XXL_821   C----  NA             --             5     f- 
MC91  58        --                id00458   Dg-g-  id00132QN      --             4     f- 
MC92  0         --                id00456   Dg-g-  NA             --             5     f- 
MC93  60        --                id00451   Dg-g-  id00124QN      --             5     f- 
MC94  61        --                id00455   Dg-g-  FB_6_id00116Q  --             5     f- 
MC95  0         --                id00422   Dg-g-  --             --             2     f- 
MC96  62   --   TCK        INPUT  XXL_823   C----  NA             --             5     f- 
MC97  63        --                --               --             --             0     f- 
MC98  0         --                XXL_816   C----  NA             --             5     f- 
MC99  64        --                --               --             --             0     f- 
MC100 0         --                id00061QN C----  --             --             2     f- 
MC101 65        --                --               --             --             0     f- 
MC102 67        --                --               --             --             0     f- 
MC103 0         --                id00053Q  C----  --             --             2     f- 
MC104 68        --                --               --             --             0     f- 
MC105 69        --                --               --             --             0     f- 
MC106 0         --                id00003   Dg--p  FB_7_id00014Q  --             5     f- 
MC107 70        --                --               FB_7_id00009Q  --             1     f- 
MC108 0         --                XXL_817   C----  NA             --             5     f- 
MC109 71   on   nDUARTSEL  C----  --               FB_7_id00007Q  --             5     f- 
MC110 72   on   nATASEL    C----  --               NA             --             5     f- 
MC111 0         --                --               --             --             0     f- 
MC112 73   --   TDO        C----  id00426   Dg-g-  NA             --             5     f- 
MC113 75   on   nATAAUXSEL C----  --               --             --             4     f- 
MC114 0         --                --               --             --             0     f- 
MC115 76   on   nATABEN    C----  --               --             --             3     f- 
MC116 0         --                --               --             --             0     f- 
MC117 77   on   nISA_IORD  C----  --               --             --             2     f- 
MC118 78   on   nISA_IOWR  C----  --               --             --             2     f- 
MC119 0         --                --               --             --             0     f- 
MC120 79   on   ISA_AEN    C----  --               --             --             1     f- 
MC121 80        --                --               --             --             0     f- 
MC122 0         --                id00443   Dg-g-  --             --             2     f- 
MC123 81        --                --               --             --             0     f- 
MC124 0         --                id00442   Dg-g-  --             --             2     f- 
MC125 83        --                --               --             --             0     f- 
MC126 84   --   ISA_RDY    INPUT  id00480   Dg-g-  --             --             2     f- 
MC127 0         --                id00482   Dg-g-  --             --             2     f- 
MC128 85   --   nISASEL    INPUT  id00481   Dg-g-  XXL_813        --             3     f- 
MC0   90        CPU_CLK    INPUT  --               --             --             0     f- 
MC0   89        nRST       INPUT  --               --             --             0     f- 
MC0   88        nDS        INPUT  --               --             --             0     f- 
MC0   87        nAS        INPUT  --               --             --             0     f- 

Logic Array Block			Macro Cells	I/O Pins	Foldbacks	TotalPT	FanIN		Cascades
A: MC1	- MC16		12/16(75%)	4/16(25%)	1/16(6%)	47/80(58%)	34/40(85%)	3
B: MC17	- MC32		10/16(62%)	10/16(62%)	3/16(18%)	42/80(52%)	34/40(85%)	0
C: MC33	- MC48		16/16(100%)	10/16(62%)	4/16(25%)	66/80(82%)	34/40(85%)	0
D: MC49	- MC64		15/16(93%)	3/16(18%)	4/16(25%)	77/80(96%)	34/40(85%)	1
E: MC65	- MC80		15/16(93%)	0/16(0%)	6/16(37%)	49/80(61%)	34/40(85%)	0
F: MC81	- MC96		16/16(100%)	1/16(6%)	4/16(25%)	62/80(77%)	34/40(85%)	0
G: MC97	- MC112		9/16(56%)	3/16(18%)	3/16(18%)	35/80(43%)	34/40(85%)	0
H: MC113- MC128		10/16(62%)	7/16(43%)	1/16(6%)	23/80(28%)	26/40(65%)	0

Total dedicated input used:	4/4 	(100%)
Total I/O pins used		38/80 	(47%)
Total Macro cells used 		107/128 	(83%)
Total Flip-Flop used 		64/128 	(50%)
Total Foldback logic used 	26/128 	(20%)
Total Nodes+FB/MCells 		129/128 	(100%)
Total cascade used 		4
Total input pins 			22
Total output pins 		20
Total Pts 				401
Creating pla file isactl.tt3 with 0 inputs 0 outputs, 0 pins 0 nodes and 0 pterms...

----------------  End fitter, Design FITS
$Device TQFP100 fits; JTAG ON; Secure OFF
FIT1508 completed in 0.00 seconds
